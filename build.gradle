/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java project to get you started.
 * For more details take a look at the Java Quickstart chapter in the Gradle
 * user guide available at https://docs.gradle.org/4.7/userguide/tutorial_java_projects.html
 */

plugins {
    id 'java'
    id 'war'
    id 'base'
    id 'application'
    id 'eclipse'
    id 'maven'
    id 'com.bmuschko.cargo' version '2.3'
    id 'io.franzbecker.gradle-lombok' version '1.14'
}

lombok {
    version = '1.16.20'
    sha256 = ''
}

war {
    archiveName = "jee-boilerplate.war"
	sourceSets.main.resources.srcDirs += ["src/main/java"]
}


dependencies {

    compile 'javax:javaee-api:7.0'

    //RESTeasy with jackson
    compile 'org.jboss.resteasy:resteasy-jaxrs:3.1.4.Final'
    compile 'org.jboss.resteasy:resteasy-servlet-initializer:3.1.4.Final'
    compile 'org.jboss.resteasy:resteasy-jackson-provider:3.1.4.Final'
    compile 'javax.ws.rs:javax.ws.rs-api:2.0.1'
    
    //database
    compile 'org.hibernate:hibernate-core:5.1.8.Final'
    compile 'org.hibernate:hibernate-entitymanager:5.1.8.Final'
    //compile 'org.postgresql:postgresql:9.4-1201-jdbc41'

    //primefaces
    compile 'org.primefaces:primefaces:6.0'

    //logging
    compile 'org.slf4j:slf4j-log4j12:1.7.25'
    compile 'log4j:log4j:1.2.17'    

    //JUnit
    testCompile 'junit:junit:4.12'


    // iText
    compile 'com.itextpdf:itextpdf:5.0.6'

    //Shiro auth
    compile 'org.apache.shiro:shiro-all:1.2.3'

    }

// In this section you declare where to find the dependencies of your project
repositories {
    // Use jcenter for resolving your dependencies.
    // You can declare any Maven/Ivy/file repository here.
    jcenter()
}


cargo {

    containerId = 'wildfly10x'
    port = 9990

    remote {
        hostname = 'localhost'
        username = 'deployment'
        password = '4deployment'
    }

    deployable {
        file = file('build/libs/jee-boilerplate.war')
    }
}

cargoDeployRemote{
    dependsOn('war')
}

cargoRedeployRemote{
    dependsOn('war')
}

// Download all deps into /runtime folder
task getDeps(type: Copy) {
    from configurations.runtime
    into 'runtime/'
}





